{"remainingRequest":"C:\\Users\\Anuitex\\source\\repos\\BlackJack\\BlackJack.AngularMVC\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js??ref--8-1!C:\\Users\\Anuitex\\source\\repos\\BlackJack\\BlackJack.AngularMVC\\node_modules\\@progress\\kendo-angular-buttons\\dist\\es\\focusable\\focus.service.js","dependencies":[{"path":"C:\\Users\\Anuitex\\source\\repos\\BlackJack\\BlackJack.AngularMVC\\node_modules\\@progress\\kendo-angular-buttons\\dist\\es\\focusable\\focus.service.js","mtime":499162500000},{"path":"C:\\Users\\Anuitex\\source\\repos\\BlackJack\\BlackJack.AngularMVC\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1532357517493},{"path":"C:\\Users\\Anuitex\\source\\repos\\BlackJack\\BlackJack.AngularMVC\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js","mtime":1528256844000}],"contextDependencies":[],"result":["/** PURE_IMPORTS_START _angular_core PURE_IMPORTS_END */\nimport { Injectable, EventEmitter } from '@angular/core';\n/**\n * @hidden\n */\nvar FocusService = /** @class */ /*@__PURE__*/ (function () {\n    function FocusService() {\n        this.onFocus = new EventEmitter();\n    }\n    FocusService.prototype.isFocused = function (index) {\n        return index === this.focused;\n    };\n    FocusService.prototype.focus = function (index) {\n        if (this.isFocused(index)) {\n            return;\n        }\n        this.focused = index;\n        this.onFocus.emit(index);\n    };\n    FocusService.prototype.resetFocus = function () {\n        this.focused = -1;\n    };\n    Object.defineProperty(FocusService.prototype, \"focused\", {\n        get: function () {\n            return this.focusedIndex;\n        },\n        set: function (index) {\n            this.focusedIndex = index;\n            this.onFocus.emit(index);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return FocusService;\n}());\nexport { FocusService };\n",null]}